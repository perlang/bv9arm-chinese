<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
	       [<!ENTITY mdash "&#8212;">]>
<!--
 - Copyright (C) 2004-2010  Internet Systems Consortium, Inc. ("ISC")
 - Copyright (C) 2000-2003  Internet Software Consortium.
 -
 - Permission to use, copy, modify, and/or distribute this software for any
 - purpose with or without fee is hereby granted, provided that the above
 - copyright notice and this permission notice appear in all copies.
 -
 - THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
 - REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 - AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
 - INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 - LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
 - OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 - PERFORMANCE OF THIS SOFTWARE.
-->

<!-- $Id: nsupdate.docbook,v 1.44 2010/07/09 23:46:51 tbox Exp $ -->
<refentry id="man.nsupdate">
  <refentryinfo>
    <date>Aug 25, 2009</date>
  </refentryinfo>
  <refmeta>
    <refentrytitle><application>nsupdate</application></refentrytitle>
    <manvolnum>1</manvolnum>
    <refmiscinfo>BIND9</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname><application>nsupdate</application></refname>
    <refpurpose>动态DNS更新工具</refpurpose>
  </refnamediv>

  <docinfo>
    <copyright>
      <year>2004</year>
      <year>2005</year>
      <year>2006</year>
      <year>2007</year>
      <year>2008</year>
      <year>2009</year>
      <year>2010</year>
      <holder>Internet Systems Consortium, Inc. ("ISC")</holder>
    </copyright>
    <copyright>
      <year>2000</year>
      <year>2001</year>
      <year>2002</year>
      <year>2003</year>
      <holder>Internet Software Consortium.</holder>
    </copyright>
  </docinfo>

  <refsynopsisdiv>
    <cmdsynopsis>
      <command>nsupdate</command>
      <arg><option>-d</option></arg>
      <arg><option>-D</option></arg>
      <group>
      <arg><option>-g</option></arg>
      <arg><option>-o</option></arg>
      <arg><option>-l</option></arg>
        <arg><option>-y <replaceable class="parameter"><optional>hmac:</optional>keyname:secret</replaceable></option></arg>
        <arg><option>-k <replaceable class="parameter">keyfile</replaceable></option></arg>
      </group>
      <arg><option>-t <replaceable class="parameter">timeout</replaceable></option></arg>
      <arg><option>-u <replaceable class="parameter">udptimeout</replaceable></option></arg>
      <arg><option>-r <replaceable class="parameter">udpretries</replaceable></option></arg>
      <arg><option>-R <replaceable class="parameter">randomdev</replaceable></option></arg>
      <arg><option>-v</option></arg>
      <arg>filename</arg>
    </cmdsynopsis>
  </refsynopsisdiv>

  <refsect1>
    <title>描述</title>
    <para><command>nsupdate</command>
      是用于提交在RFC 2136中所定义的动态DNS更新请求给一个名字服务器。
      这允许在不用手工编辑区文件的情况下增加或删除一个区的资源记录。
      一个更新请求可以包含增加或删除多个资源记录的请求。
    </para>
    <para>
      在由<command>nsupdate</command>进行动态控制之下的区或者
      一个DHCP服务器不应该由手工编辑。手工编辑可能与动态更新
      相冲突并导致数据丢失。
    </para>
    <para>
      使用<command>nsupdate</command>动态增加或删除的资源记录必须
      在同一个区内。
      请求发给区的主服务器。
      这由区的SOA记录的MNAME字段来标识。
    </para>
    <para>
      <option>-d</option>选项使<command>nsupdate</command>运行在
      调试模式。
      它提供关于所生成的更新请求和从名字服务器收到的回复的跟踪信息。
    </para>
    <para>
      <option>-D</option>选项让<command>nsupdate</command>报告比
      <option>-d</option>更多的附加调试信息。
    </para>
    <para>
      <option>-L</option>选项带有一个整数参数，为0或更大，用于设置
      日志的调试级别。如果为0，就关掉日志。
    </para>
    <para>
      事务签名可以被用于认证动态DNS更新。
      这些使用在RFC 2845中所描述的TSIG资源记录或者在RFC 2535和RFC 2931
      中所描述的SIG(0)记录或者在RFC 3645中所描述的GSS-TSIG。
      TSIG依赖于一个仅有<command>nsupdate</command>和名字服务器所知道
      一个共享密钥。
      当前，TSIG中唯一支持的加密算法是在RFC 2104中所定义的HMAC-MD5。
      一旦为TSIG定义了其它算法，应用程序需要确保在相互认证时，它们选择
      合适的算法，如同选择合适的密钥一样。
      例如，合适的<type>key</type>和<type>server</type>语句会被添加到
      <filename>/etc/named.conf</filename>，这样名字服务器可以将合适
      的密钥和算法关联到将会使用TSIG认证的客户端应用所在的IP地址上。
      SIG(0)使用概要加密算法。要使用一个SIG(0)密钥，公钥必须存放在
      名字服务器所服务的区的一个KEY记录中。
      <command>nsupdate</command>不会读
      <filename>/etc/named.conf</filename>。
      GSS-TSIG使用Kerberos凭证。标准的GSS-TSIG模式使用
      <option>-g</option>标志打开。Windows 2000所使用的一个非标准兼容的
      GSS-TSIG变体可以用<option>-o</option>标志打开。
    </para>
    <para><command>nsupdate</command>
      使用<option>-y</option>或<option>-k</option>选项提供生成一个
      认证动态DNS更新请求的TSIG记录所需的共享密钥，缺省是HMAC-MD5。
      这些选项是互斥的。
    </para>
    <para>
      当使用了<option>-y</option>选项时，从
      <optional><parameter>hmac:</parameter></optional><parameter>keyname:secret</parameter>
      生成一个签名。
      <parameter>keyname</parameter>是密钥的名字，而
      <parameter>secret</parameter>是base64编码的共享密钥。
      不鼓励使用<option>-y</option>选项，因为共享密钥是以
      文本形式作为命令行参数提供的。在
      <citerefentry>
	<refentrytitle>ps</refentrytitle><manvolnum>1</manvolnum>
      </citerefentry>的输出或者在用户的shell所维护的历史文件中，
      这个可能是可见的。
    </para>
    <para>
      使用<option>-k</option>选项，
      <command>nsupdate</command>从文件
      <parameter>keyfile</parameter>读入共享密钥。密钥文件可以
      有两种格式：一个包含一个<filename>named.conf</filename>-格式
      的<command>key</command>语句的文件，它可以由
      <command>ddns-confgen</command>自动生成，或者一对文件，其
      文件名格式是
      <filename>K{name}.+157.+{random}.private</filename>和
      <filename>K{name}.+157.+{random}.key</filename>，它们可以
      由<command>dnssec-keygen</command>生成。
      <option>-k</option>也可以用于指定一个用于认证动态DNS更新请求的SIG(0)
      密钥。在这个情况下，所指定的密钥不是一个HMAC-MD5密钥。
    </para>
    <para>
      <command>nsupdate</command>可以用于一个只local-host的模式，
      通过使用<option>-l</option>标志。这将会把服务器地址设置为
      localhost（关闭<command>server</command>，这样服务器地址
      就不能被覆盖）。到本地服务器的连接将使用在
      <filename>/var/run/named/session.key</filename>中找到的一个
      TSIG密钥，如果有任何本地主区的<command>update-policy</command>
      设置为<command>local</command>，这个密钥可以由<command>named</command>
      自动生成。这个密钥文件的位置可以使用<option>-k</option>
      选项覆盖。
    </para>
    <para>
      缺省时，<command>nsupdate</command>使用UDP发送更新请求给名字服务器，
      除非它们太大不能装进一个UDP请求中，这种情况将使用TCP。
      <option>-v</option>选项让<command>nsupdate</command>使用一个TCP连接。
      当有一批更新请求时，这个可能是更优的。
    </para>
    <para>
      <option>-p</option>设置用于连接一个名字服务器的缺省端口。缺省
      为53.
    </para>
    <para>
      <option>-t</option>选项设置一个更新请求在其被中断之前可以持续的最大
      时间。缺省是300秒。0可以用来关掉超时。
    </para>
    <para>
      <option>-u</option>选项设置UDP重试间隔。缺省是3秒。如果为0，这个间隔
      将会从超时间隔和UDP重试次数中计算得到。
    </para>
    <para>
      <option>-r</option>选项设置UDP重试次数。缺省是3。如果为0，仅仅会生成
      一次更新请求。
    </para>
    <para>
      <option>-R <replaceable
      class="parameter">randomdev</replaceable></option>选项
      指定一个随机性的源。如果操作系统不提供
      <filename>/dev/random</filename>或等效的设备，缺省的随机性的源为
      键盘输入。<filename>randomdev</filename>指定一个字符设备名或包含
      随机数据的文件名，用来替代缺省值。特定值
      <filename>keyboard</filename>指示使用键盘输入。
      这个选项可以指定多次。
    </para>
  </refsect1>

  <refsect1>
    <title>输入格式</title>
    <para><command>nsupdate</command>
      从<parameter>filename</parameter>或标准输入读取输入。
      每个命令刚好在一个输入行内。
      一些命令是出于管理的目的。
      其它的命令要么是更新指令，要么是检查区内容的先决条件。
      这些检查设置条件，即一些名字或资源记录集要么存在，要么
      不存在于区中。
      如果要让整个更新请求成功，这些条件必须被满足。
      如果对先决条件的测试失败，更新将被拒绝。
    </para>
    <para>
      每个更新请求由0个或多个先决条件以及0个或多个更新所组成。
      如果某些指定的资源记录出现或不出现在区中，这允许一个合适的经过
      认证的更新请求进行处理。
      一个空输入行（或<command>send</command>命令）导致所有累积的命令被
      作为一个动态DNS更新请求发送给名字服务器。
    </para>
    <para>
      命令格式及其含义如下：
      <variablelist>

        <varlistentry>
          <term>
              <command>server</command>
              <arg choice="req">servername</arg>
              <arg choice="opt">port</arg>
            </term>
          <listitem>
            <para>
	      发送所有更新请求给名字服务器
	      <parameter>servername</parameter>。
	      当没有提供server语句时，<command>nsupdate</command>将发送
	      更新请求给正确的区的主服务器。
	      这个区的SOA记录中的MNAME字段将会标识这个区的主服务器。
              <parameter>port</parameter>
	      是接收动态更新请求的
              <parameter>servername</parameter>
	      上的端口号。
	      如果没有指定端口号，就使用缺省的DNS端口号53。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>local</command>
              <arg choice="req">address</arg>
              <arg choice="opt">port</arg>
            </term>
          <listitem>
            <para>
	      使用本地<parameter>address</parameter>发送所有动态更新请求给
	      名字服务器。
	      当没有提供local语句时，
	      将使用系统所选择的一个地址和端口发送更新。
              <parameter>port</parameter>还可以用在使请求来自一个
	      指定的端口。
	      如果没有指定端口号，系统将会分配一个。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>zone</command>
              <arg choice="req">zonename</arg>
            </term>
          <listitem>
            <para>
	      指定所有的更新都发生在区
	      <parameter>zonename</parameter>上。
	      如果没有提供<parameter>zone</parameter>语句，
	      <command>nsupdate</command>会试图基于其余的输入来决定正确的区。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>class</command>
              <arg choice="req">classname</arg>
            </term>
          <listitem>
            <para>
	      指定缺省类。如果没有指定
	      <parameter>class</parameter>，缺省类是
	      <parameter>IN</parameter>。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>ttl</command>
              <arg choice="req">seconds</arg>
            </term>
          <listitem>
            <para>
	      指定要添加记录的缺省生存期。
	      值<parameter>none</parameter>将清除缺省生存期。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>key</command>
              <arg choice="req">name</arg>
              <arg choice="req">secret</arg>
            </term>
          <listitem>
            <para>
	      指定所有的更新都用
	      <parameter>keyname</parameter> <parameter>keysecret</parameter>
	      对进行TSIG签名。
	      <command>key</command>命令覆盖任何在命令行由
	      <option>-y</option>或<option>-k</option>所指定的
	      密钥。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <command>gsstsig</command>
          </term>
          <listitem>
            <para>
            使用GSS-TSIG对更新签名。这个等效于在命令行指定
	    <option>-g</option>。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <command>oldgsstsig</command>
          </term>
          <listitem>
            <para>
            使用Windows 2000版的GSS-TSIG对更新签名。这个等效于在命令行指定
	    <option>-o</option>。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
            <command>realm</command>
            <arg choice="req"><optional>realm_name</optional></arg>
          </term>
          <listitem>
            <para>
            在使用GSS-TSIG时，用<parameter>realm_name</parameter>而不是
	    <filename>krb5.conf</filename>中的缺省realm。如果未指定realm，
	    则已保存的realm将被清除。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>prereq nxdomain</command>
              <arg choice="req">domain-name</arg>
            </term>
          <listitem>
            <para>
	      要求名字<parameter>domain-name</parameter>没有存在任何类型的
	      资源记录。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>prereq yxdomain</command>
              <arg choice="req">domain-name</arg>
            </term>
          <listitem>
            <para>
	      要求<parameter>domain-name</parameter>存在（至少有一个
	      资源记录，可以是任何类型）。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>prereq nxrrset</command>
              <arg choice="req">domain-name</arg>
              <arg choice="opt">class</arg>
              <arg choice="req">type</arg>
            </term>
          <listitem>
            <para>
	      要求指定的<parameter>type</parameter>，
	      <parameter>class</parameter>和
	      <parameter>domain-name</parameter>不存在任何资源记录。
	      如果省略
	      <parameter>class</parameter>，就假定为IN（internet）。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>prereq yxrrset</command>
              <arg choice="req">domain-name</arg>
              <arg choice="opt">class</arg>
              <arg choice="req">type</arg>
            </term>
          <listitem>
            <para>
	      这个要求指定的<parameter>type</parameter>，
	      <parameter>class</parameter>和
	      <parameter>domain-name</parameter>必须存在一个资源记录。
	      如果省略<parameter>class</parameter>，
	      就假定为IN（internet）。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>prereq yxrrset</command>
              <arg choice="req">domain-name</arg>
              <arg choice="opt">class</arg>
              <arg choice="req">type</arg>
              <arg choice="req" rep="repeat">data</arg>
            </term>
          <listitem>
            <para>
	      来自每个这种形式的先决条件集合的
	      <parameter>data</parameter>共享一个共同的
	      <parameter>type</parameter>，
	      <parameter>class</parameter>和
	      <parameter>domain-name</parameter>，并被组合成一个
	      资源记录集合的形式。
	      这个资源记录集合必须精确地匹配区中以
	      <parameter>type</parameter>，
	      <parameter>class</parameter>和
	      <parameter>domain-name</parameter>给出的已存在的资源记录
	      集合。
	      <parameter>data</parameter>以资源记录RDATA的标准文本表示
	      方法书写。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>update delete</command>
              <arg choice="req">domain-name</arg>
              <arg choice="opt">ttl</arg>
              <arg choice="opt">class</arg>
              <arg choice="opt">type <arg choice="opt" rep="repeat">data</arg></arg>
            </term>
          <listitem>
            <para>
	      删除名为<parameter>domain-name</parameter>的任何资源记录。
	      如果提供了<parameter>type</parameter>和
	      <parameter>data</parameter>，只有匹配的资源记录会被删除。
	      如果没有提供<parameter>class</parameter>，就假设是
	      internet类。<parameter>ttl</parameter>被忽略，仅为了
	      兼容性而允许之。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>update add</command>
              <arg choice="req">domain-name</arg>
              <arg choice="req">ttl</arg>
              <arg choice="opt">class</arg>
              <arg choice="req">type</arg>
              <arg choice="req" rep="repeat">data</arg>
            </term>
          <listitem>
            <para>
	      使用指定的<parameter>ttl</parameter>，
	      <parameter>class</parameter>和
	      <parameter>data</parameter>增添一个新的
	      资源记录。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>show</command>
            </term>
          <listitem>
            <para>
	      显示当前消息，包含自上次发送以来所指定的所有
	      先决条件和更新。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>send</command>
            </term>
          <listitem>
            <para>
	      发送当前消息。这等效于输入一个空行。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>answer</command>
            </term>
          <listitem>
            <para>
	      显示回答。
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>
              <command>debug</command>
            </term>
          <listitem>
            <para>
	      打开调试。
            </para>
          </listitem>
        </varlistentry>

      </variablelist>
    </para>

    <para>
      以一个分号开始的行是注释并被忽略。
    </para>

  </refsect1>

  <refsect1>
    <title>例子</title>
    <para>
      下面的例子显示<command>nsupdate</command>如何被用于对
      <type>example.com</type>区插入和删除资源记录。
      注意每个例子中的输入包含一个结尾的空行，这样就将一组命令作为一个
      动态更新请求发送给<type>example.com</type>的主名字服务器。

      <programlisting>
# nsupdate
&gt; update delete oldhost.example.com A
&gt; update add newhost.example.com 86400 A 172.16.1.1
&gt; send
</programlisting>
    </para>
    <para>
      <type>oldhost.example.com</type>的任何A记录
      被删除。
      <type>newhost.example.com</type>的一个带有
      IP地址172.16.1.1的A记录被添加。
      新添加的记录具有一个1天的TTL（86400秒）。
      <programlisting>
# nsupdate
&gt; prereq nxdomain nickname.example.com
&gt; update add nickname.example.com 86400 CNAME somehost.example.com
&gt; send
</programlisting>
    </para>
    <para>
      先决条件是让名字服务器检查没有<type>nickname.example.com</type>
      的任何类型的资源记录。

      如果有，更新请求失败。
      如果这个名字不存在，就为它添加一个CNAME。
      这就确保了在添加CNAME时，不会与RFC 1034中的长标准规则相冲突，即如果一个
      名字存在一个CNAME，就必须不能存在其它任何记录类型。
      （这个规则在RFC 2535中为DNSSEC而被更新，以允许CNAME可以有RRSIG，DNSKEY
      和NSEC记录。）
    </para>
  </refsect1>

  <refsect1>
    <title>文件</title>

    <variablelist>
      <varlistentry>
        <term><constant>/etc/resolv.conf</constant></term>
        <listitem>
          <para>
	    用于标识缺省的名字服务器。
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><constant>/var/run/named/session.key</constant></term>
        <listitem>
          <para>
            设置用于local-only模式的缺省TSIG密钥。
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><constant>K{name}.+157.+{random}.key</constant></term>
        <listitem>
          <para>
	    由
            <citerefentry>
              <refentrytitle>dnssec-keygen</refentrytitle><manvolnum>8</manvolnum>
            </citerefentry>所创建的HMAC-MD5密钥的base-64编码。
          </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><constant>K{name}.+157.+{random}.private</constant></term>
        <listitem>
          <para>
	    由
            <citerefentry>
              <refentrytitle>dnssec-keygen</refentrytitle><manvolnum>8</manvolnum>
            </citerefentry>所创建的HMAC-MD5密钥的base-64编码。
          </para>
        </listitem>
      </varlistentry>

    </variablelist>
  </refsect1>

  <refsect1>
    <title>参见</title>
    <para>
      <citetitle>RFC 2136</citetitle>,
      <citetitle>RFC 3007</citetitle>,
      <citetitle>RFC 2104</citetitle>,
      <citetitle>RFC 2845</citetitle>,
      <citetitle>RFC 1034</citetitle>,
      <citetitle>RFC 2535</citetitle>,
      <citetitle>RFC 2931</citetitle>,
      <citerefentry>
        <refentrytitle>named</refentrytitle><manvolnum>8</manvolnum>
      </citerefentry>,
      <citerefentry>
        <refentrytitle>ddns-confgen</refentrytitle><manvolnum>8</manvolnum>
      </citerefentry>,
      <citerefentry>
        <refentrytitle>dnssec-keygen</refentrytitle><manvolnum>8</manvolnum>
      </citerefentry>.
    </para>
  </refsect1>

  <refsect1>
    <title>BUGS</title>
    <para>
      TSIG密钥是冗余存放在两个分离的文件中。
      这是nsupdate为其加密操作使用DST库的一个后果，在将来的
      版本中可能会变化。
    </para>
  </refsect1>
</refentry><!--
 - Local variables:
 - mode: sgml
 - End:
-->

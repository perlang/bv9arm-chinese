<!--
 - Copyright (C) Internet Systems Consortium, Inc. ("ISC")
 -
 - This Source Code Form is subject to the terms of the Mozilla Public
 - License, v. 2.0. If a copy of the MPL was not distributed with this
 - file, You can obtain one at http://mozilla.org/MPL/2.0/.
 -
 - See the COPYRIGHT file distributed with this work for additional
 - information regarding copyright ownership.
-->

<!-- Converted by db4-upgrade version 1.0 -->
<section xmlns:db="http://docbook.org/ns/docbook" version="5.0" xml:id="module-info"><info><title>插件</title></info>

  <para>
    插件是一个实验动态加载库扩展<command>named</command>功能
    的机制。
    通过使用插件，对多数用户，服务器的核心功能可以保持简单；
    更复杂的代码实现可选的特性，只被那些需要这些特性的用户
    安装。
  </para>
  <para>
    The plugin interface is a work in progress, and is expected to evolve
    as more plugins are added. Currently, only "query plugins" are supported;
    these modify the name server query logic. Other plugin types may be added
    in the future.
  </para>
  <para>
    The only plugin currently included in BIND is
    <filename>filter-aaaa.so</filename>, which replaces the
    <command>filter-aaaa</command> feature that previously existed natively
    as part of <command>named</command>.
    The code for this feature has been removed from <command>named</command>,
    and can no longer be configured using standard
    <filename>named.conf</filename> syntax, but linking in the
    <filename>filter-aaaa.so</filename> plugin provides identical
    functionality.
  </para>

  <section><info><title>配置插件</title></info>
    <para>
      插件通过在<filename>named.conf</filename>中使用
      <command>plugin</command>语句配置：
    </para>
    <screen>
    plugin query "library.so" {
        <replaceable>parameters</replaceable>
    };
    </screen>
    <para>
      In this example, file <filename>library.so</filename> is the plugin
      library.  <literal>query</literal> indicates that this is a query
      plugin.
    <para>
    </para>
      Multiple <command>plugin</command> statements can be specified, to load
      different plugins or multiple instances of the same plugin.
    </para>
    <para>
      <replaceable>parameters</replaceable> are passed as an opaque
      string to the plugin's initialization routine. Configuration
      syntax will differ depending on the module.
    </para>
  </section>

  <section><info><title>开发插件</title></info>
    <para>
      每个插件实现了四个功能：
      <itemizedlist>
        <listitem><command>plugin_register</command> to allocate memory,
        configure a plugin instance, and attach to hook points within
        <command>named</command>,</listitem>
        <listitem><command>plugin_destroy</command> to tear down the plugin
        instance and free memory,</listitem>
        <listitem><command>plugin_version</command> to check that the plugin
        is compatible with the current version of the plugin API,</listitem>
        <listitem><command>plugin_check</command> to test syntactic
        correctness of the plugin parameters.</listitem>
      </itemizedlist>
    </para>
    <para>
      At various locations within the <command>named</command> source code,
      there are "hook points" at which a plugin may register itself.
      When a hook point is reached while <command>named</command> is
      running, it is checked to see whether any plugins have registered
      themselves there; if so, the associated "hook action" is called -
      this is a function within the plugin library. Hook actions may
      examine the runtime state and make changes - for example, modifying
      the answers to be sent back to a client or forcing a query to be
      aborted. More details can be found in the file
      <filename>lib/ns/include/ns/hooks.h</filename>.
    </para>
  </section>

</section>

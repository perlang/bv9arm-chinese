.. Copyright (C) Internet Systems Consortium, Inc. ("ISC")
..
.. SPDX-License-Identifier: MPL-2.0
..
.. This Source Code Form is subject to the terms of the Mozilla Public
.. License, v. 2.0.  If a copy of the MPL was not distributed with this
.. file, you can obtain one at https://mozilla.org/MPL/2.0/.
..
.. See the COPYRIGHT file distributed with this work for additional
.. information regarding copyright ownership.

.. _dnssec_commonly_asked_questions:

常见问题
--------

下面是一些常见的问题和一些（希望是）有帮助的答案。

我需要IPv6有DNSSEC吗？
   不。DNSSEC不需要IPv6也可以部署。

DNSSEC是否会加密我的DNS流量，以便其它人不能窃听我的DNS查询？
   不会。虽然在DNSSEC中使用了加密密钥和数字签名，但它们只提供了真实性
   和完整性，而不是隐私性。嗅探网络流量的人仍然可以看到所有的DNS查询和
   纯文本的答案；DNSSEC只是让窃听者很难改变或伪造DNS响应。为对抗窃听，
   最好的协议是DNS-over-TLS。DNS-over-HTTPS也可以完成这项任务，但是它
   更复杂。

如果我们部署了DNS-over-TLS/HTTPS，是否可以跳过部署DNSSEC？
   不能。在加密传输上的DNS阻止了网络上的窃听者，但它不能防止缓存中毒和
   DNS解析链的其它部分的对答复的操作。换句话说，这些技术只对在两台机器
   之间传输的记录提供保护；任何被入侵的服务器仍然可以将流量重定向到其
   它地方（或者只是窃听）。然而，DNSSEC为DNS **记录** 提供完整性和真实
   性，即使这些记录存储在缓存和磁盘上。

DNSSEC是否保护我的笔记本电脑和我的名字服务器之间的通信？
   很遗憾，现在没有。DNSSEC旨在保护终端客户端(笔记本电脑)和名字服务器之
   间的通信；然而，截至2020年年中，很少有应用程序或存根解析器库能够利用
   此功能。

DNSSEC是否包含区传输？
   不是。您应该考虑使用TSIG来保护名字服务器之间的区传输。

DNSSEC是否保护我的网络免受恶意网站的攻击？
   DNSSEC将使攻击者更难伪造DNS响应或执行缓存中毒。它仍然不能防止用户访
   问攻击者拥有和操作的恶意网站，或防止用户敲错域名；它仅仅使攻击者不
   太可能劫持其它域名。

   换句话说，DNSSEC旨在提供信任，当从端口53接收到针对 www.company.com
   的DNS响应时，它确实来自Comapny的名字服务器，并且答案是真实的。但这
   并不意味着用户通过端口80或端口443访问的Web服务器一定是安全的。

因为大多数域名还没有使用DNSSEC，如果我启用了DNSSEC验证，它会破坏DNS查找吗？
   不会。DNSSEC向后兼容“标准的”DNS。一个启用了DNSSEC的验证解析器仍然可
   以查找所有这些域名，因为它总是在标准DNS下。
  
   有四(4)类的响应(参见 :rfc:`4035`):
  
   .. glossary::

      安全
         域已正确部署DNSSEC。

      不安全
         尚未部署DNSSEC的域。

      冒牌
         域已经部署了DNSSEC，但做得不正确。

      不确定
         不能确定这些域是否使用DNSSEC的域。

   一个启用了dnssec的验证解析器仍然会解析 :term:`安全` 和
   :term:`不安全` ；只有 :term:`冒牌` 和 :term:`不确定` 会得到一个
   SERVFAIL的结果。截止到2022年中，大致有三分之一的全球用户已经在其递
   归名字服务器上使用DNSSEC验证。谷歌公共DNS(8.8.8.8)也启用了DNSSEC验
   证。

我需要有特殊的客户端软件来使用DNSSEC吗？
   不需要。DNSSEC只改变DNS服务器之间的通信行为，不改变DNS服务器(验证解
   析器)和客户端(存根解析器)之间的通信行为。当你的递归服务器上启用了
   DNSSEC验证，如果一个域名没有通过检查，将给客户端返回一条错误消息(通
   常是SERVFAIL)；对于今天的大多数客户端软件，它似乎是DNS查询失败或域名
   不存在。

既然DNSSEC使用公钥加密，我需要公共密钥基础设施(PKI)来使用DNSSEC吗？
   不需要。DNSSEC不依赖一个PKI的存在。公钥存储在DNS层次体系中；每个区
   的可信性由其父区保证，一直到根区。根区的信任锚的副本随BIND 9一起分
   发。

我是否需要从证书颁发机构(CA)购买SSL证书以使用DNSSEC？
   不需要。通过DNSSEC，您可以生成和发布自己的密钥，并对自己的数据进行签
   名。没有必要付钱给别人为你做这件事。

我的父区不支持DNSSEC；我还能对我的区签名吗？
   技术上说，是的，但是你无法获得DNSSEC的全部好处，因为其它验证解析器无
   法验证区数据。如果父区中没有DS记录，其它验证解析器将您的区视为不安全
   的(传统的)区，因此不会执行实际的验证。对世界上的其他人来说，你的区看
   起来仍然是不安全的，并且它将继续是不安全的，直到你的父区可以为你保存
   DS记录并告诉世界上的其他人你的区已经签名。

DNSSEC和TSIG是一回事吗？
   不是。TSIG通常用于主名字服务器和辅名字服务器之间，以确保区传输的安全，
   而DNSSEC通过验证答案来确保DNS查找的安全。即使你启用了DNSSEC，区传输
   仍然没有被验证；为了保护主名字服务器和辅名字服务器之间的通信，可以考
   虑设置TSIG或类似的安全通道。

如何将密钥从主服务器复制到辅服务器？
   DNSSEC使用公钥加密机制，结果是两种类型的密钥：公钥和私钥。公钥是区数
   据的一部分，存储为DNSKEY记录类型。因此，公共密钥作为区传输的一部分从
   主服务器同步到辅服务器。私钥不会(也不应该)存储在主服务器上的安全位置
   之外的任何地方。有关键存储选项和注意事项的更多信息，请参阅
   :ref:`advanced_discussions_key_storage` 。

我可以在多个区使用相同的密钥吗？
   是也不是。良好的安全实践建议，您应该为每个区使用唯一的密钥对，就像
   您应该为电子邮件帐户、社交媒体登录和在线银行凭证设置不同的密码一样。
   在技术层面上，重用密钥是完全可行的，但如果一个密钥对被破坏，多个区
   就会面临风险。但是，如果您有数百或数千个区需要管理，那么针对所有区
   的一个密钥对管理起来就不那么容易出错。你可以选择使用与密码管理相同
   的方法：为你的银行账户和购物网站使用独特的密码，但对你不太重要的登
   录使用标准密码。首先，对您的区进行分类：高价值的区（或具有特定密钥
   轮转需求的区）拥有它们自己的密钥对，而其它更“普通”的区可以使用一个
   密钥对以方便管理。请注意，目前（2020年年中），全自动签名（使用
   :iscman:`named` 配置文件中的 :any:`dnssec-policy` 子句）不支持密钥重
   用，除非在多个视图中出现的同一个区（见下一个问题）。若要对多个区使
   用相同的密钥，请使用半自动签名对您的区进行签名。希望使用该密钥的每
   个区都应该指向相同的密钥目录。

如何对出现在多个视图中的区的不同实例签名？
   为配置文件中的每个 :any:`zone` 定义添加一条 :any:`dnssec-policy` 语
   句。为避免一台计算机访问区的不同实例而信息仍在其缓存中(例如，一台笔
   记本电脑从您的办公室移动到客户的站点)的问题，您应该使用相同的密钥对
   所有实例进行签名。这意味着为该区的所有实例设置相同的DNSSEC策略，并
   确保该区的所有实例的密钥目录是相同的。
   
如果我改变一个区的DNSSEC策略会有什么问题吗？
   如果你使用全自动化签名，就没有问题。只需更改 :any:`dnssec-policy` 语句
   中的参数并重新加载配置文件。 :iscman:`named` 平滑地过渡到新策略，确
   保您的区在任何时候都是有效的。

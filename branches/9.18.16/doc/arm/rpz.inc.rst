.. Copyright (C) Internet Systems Consortium, Inc. ("ISC")
..
.. SPDX-License-Identifier: MPL-2.0
..
.. This Source Code Form is subject to the terms of the Mozilla Public
.. License, v. 2.0.  If a copy of the MPL was not distributed with this
.. file, you can obtain one at https://mozilla.org/MPL/2.0/.
..
.. See the COPYRIGHT file distributed with this work for additional
.. information regarding copyright ownership.

.. highlight:: none

.. dns_firewalls_rpz:

DNS防火墙和响应策略区
---------------------

DNS防火墙检查DNS流量并允许一些响应通过，同时阻塞其它的。这种检查可以基
于几个标准，包括所请求的名字、与该名字相关的数据（如IP地址），或者是所
请求名字的权威名字服务器的名字或IP地址。根据这些标准，可以配置DNS防火
墙来丢弃、修改或替换原始响应，从而允许管理员更多地控制哪些系统可以访问，
或从其网络可以访问哪些系统。

DNS响应策略区（RPZ）是一种DNS形式的防火墙，在其中，防火墙规则在DNS自身
逻辑中表述 - 在特定构造的DNS区中以一个开放、厂商中立的格式编码为记录。

使用DNS区配置策略允许使用标准DNS区传送机制将策略从一台服务器共享到另一
台服务器。这允许DNS操作者维护自己的防火墙策略，并在内部名字服务器之间
轻松地共享它们，或订阅外部防火墙策略，如商业的或合作的“威胁订阅”，或两
者兼有。

:iscman:`named` 可以订阅至多64个响应策略区，每个编码为一个独立的策略规
则集。每条规则存储在RPZ内部的一条DNS资源记录集（RRset）中，由一个
**触发器** 和一个 **动作** 组成。有五种类型的触发器和六种类型的动作。

在DNSRPZ中的响应策略规则可以由下列因素触发：

- 通过客户端的IP地址
- 通过请求名
- 通过真实响应中可能出现的地址
- 通过负责发布原始响应的权威名字服务器的名字或地址

响应策略动作可以是下列之一：

- 合成一个“域名不存在”（NXDOMAIN）响应
- 合成一个“名字存在但没有所请求类型的记录”（NODATA）响应
- 使用（在响应策略区中提供的）特定数据替代/覆盖响应数据
- 丢掉响应
- 转到TCP，通过发送一个截断的UDP响应而要求DNS客户端使用TCP重试
- 使响应免受更多的策略处理

使用DNS防火墙的最常见的情况是“污染”一个域名，IP地址，名字服务器名字或
名字服务器IP地址。污染通常是通过强制一个合成的“域名不存在”（NXDOMAIN）
响应。这就意味着如果一个管理员维护了一个已知的“钓鱼”域名清单，就可以添
加一条防火墙策略到递归服务器中使其无法被客户或最终用户访问到，策略就是
一个对应每个已知的“钓鱼”域名的触发器，和一个在每种情况下强制一条合成
NXDOMAIN响应的动作。也可能使用一个数据替换动作，例如使用一个本地web服
务器的名字来回答这些已知的“钓鱼”域名，可以显示一个警告页面。这样的web
服务器被称为“围墙花园”。

.. note::

  权威名字服务器可以响应多个不同的域。如果使用DNS RPZ污染由某些权威名
  字服务器名字或地址所服务的所有域，其影响可能相当深远。建议用户确保此
  类权威名字服务器不会同时服务于不应污染的域。

.. _why_dns_firewall:

为什么使用DNS防火墙？
~~~~~~~~~~~~~~~~~~~~~

互联网上的犯罪和网络滥用流量经常使用域名系统（DNS），因此针对这些威胁
的保护应该包括DNS防火墙。DNS防火墙可以选择性地拦截对已知网络资产（包括
域名、IP地址和名字服务器）的DNS查询。拦截可能意味着重写DNS响应，将web
浏览器导向一个“围墙花园”，或者简单地使任何恶意的网络资产不可见和不可达。

.. _what_dns_firewalls_do:

DNS防火墙能做什么？
~~~~~~~~~~~~~~~~~~~

防火墙的工作原理是对网络流量应用一组规则，其中每个规则由一个触发器和一
个动作组成。触发器决定了网络流量中的哪些消息被特殊处理，而动作决定了特
殊处理是什么。对于DNS防火墙，要控制的网络流量由递归DNS服务器发送给最终
用户客户端的响应组成。一些真正的响应对于所有客户机来说都是不安全的，因
此DNS防火墙中的策略规则允许拦截一些响应并替换为更安全的内容。

.. _rpz_rule_sets:

建立和维护RPZ规则集
~~~~~~~~~~~~~~~~~~~

在DNS RPZ中，DNS防火墙策略规则集是存储在一个DNS区中，它使用任何其它DNS
区同样的工具和方法来维护和同步。DNS RPZ的主名字服务器可以是内部服务器，
如果管理员创建并维护其自己的DNS策略区，也可以是外部的名字服务器（例如
一个安全厂商的服务器），如果导入外部发布的策略区。DNS防火墙策略的主拷
贝可以是一个DNS“区文件”，它可以是手工编辑的，也可以是从数据库生成的。
一个DNS区还可以是使用DNS动态更新（例如，使用“nsupdate” shell 级应用）
间接编辑的。

DNS RPZ允许防火墙规则以DNS区格式表示，然后作为DNS数据传递给订阅者。能
够处理DNS RPZ的递归DNS服务器使用用于辅名字服务的相同的标准DNS工具和协
议来同步这些DNS防火墙规则。然后，DNS策略信息被提升到客户DNS解析器内部
的DNS控制平面，使该服务器成为DNS防火墙。

其产品包含威胁情报提要的安全公司可以使用DNS响应策略区（DNS Response
Policy Zone, RPZ）作为向客户交付的通道。威胁可以表示为已知的恶意IP地址
和子网，已知的恶意域名和已知的恶意域名服务器。通过将这些威胁信息直接提
供给客户的本地DNS解析器，提供商可以将这些DNS服务器转换为分布式DNS防火
墙。

当客户的DNS解析器通过实时订阅连接到威胁情报提要时，提供商可以在发现恶意
网络元素（包括IP地址和子网、域名和名字服务器）时立即保护客户的最终用户。
一旦举报犯罪和滥用基础设施，可能需要几天或几周的时间才能“拿下”，但分布
式DNS防火墙可以立即做出响应。

其他分布式TCP/IP防火墙已经在市场上出现很多年了，企业用户现在可以从安全
供应商直接将实时威胁情报导入他们的防火墙。这种情报可以采取已知的恶意IP
地址或子网的形式，或者识别已知的恶意电子邮件附件、文件下载或web地址（
URL）的模式。在某些产品中，也可以根据它们所携带的名字或地址来阻止DNS数
据包。

.. _rpz_limitations:

DNS RPZ的局限
~~~~~~~~~~~~~

我们经常被问到DNS RPZ是否可以用于设置到一个CDN的重定向。例如，如果
“mydomain.com”是一个具有SOA，NS，MX，TXT等记录的普通域名，这是如果某人
发送了一个针对“mydomain.com”的A或AAAA查询，我们是否可以在权威名字服务
器上使用DNS RPZ来返回“CNAME mydomain.com.my-cdn-provider.net”？

这个建议的问题是没有办法只CNAME A和AAAA查询，即使使用RPZ也不行。

根本原因是，如果权威服务器使用CNAME进行应答，进行该查询的递归服务器将
缓存响应。然后（当CNAME仍然在缓存中），它假设对于被查询的名字没有任何
非CNAME类型的记录缓存，并将后续对所有其它类型的查询直接指向CNAME记录的
目标名。

需要明确的是，这不是RPZ的局限；它是DNS协议工作方式的一个功能。在设置
CDN时，使用“部分”CNAME是不可能的，因为这样做会破坏其他功能，如对电子邮
件的路由。

同样，根据DNS协议定义， ``*.example`` 记录形式的通配符可能以不直观的方
式表现。有关DNS中通配符的详细定义，请参见 :rfc:`4592` ，特别是第2节。

.. _dns_firewall_examples:

DNS防火墙用法举例
~~~~~~~~~~~~~~~~~

这里有一些DNS防火墙可能有用的场景。

一些已知的威胁基于IP地址或子网（IP地址范围）。例如，一项分析可能表明，
在一个“C类”网络中的所有地址都被犯罪团伙用于“网络钓鱼”web服务器。使用基
于DNS RPZ的DNS防火墙，可以创建这样的防火墙策略：“如果DNS查找会得到来自
这个C类网络的地址，那么使用NXDOMAIN进行应答。”这条简单的规则将防止客户
网络中的任何最终用户查找到此次网络钓鱼攻击中使用的任何域名，而无需事先
知道这些域名是什么。

其它已知的威胁是基于域名的。分析可能会确定某个域名或一组域名正在或即将
被用于垃圾邮件、网络钓鱼或其它基于互联网的攻击，这些都需要能用的域名。
通过向分布式DNS防火墙添加名字触发规则，提供商可以保护客户的最终用户免
受任何攻击，这些攻击要求他们能够查找任何这些恶意名字。名字可以是通配符
（例如，\*.evil.com），如果某些域不像其它域那样恶意，则这些通配符可能
异常（如果\*.evil.com是恶意的，则not.evil.com可能是一个异常）。

随着电子犯罪的增长，电子犯罪的专业知识也在增长。许多犯罪团伙现在维护他
们自己广泛的DNS基础设施，以支持大量域名和一组不同的IP地址资源。分析表
明，在许多情况下，犯罪组织拥有的唯一真正固定资产是其名字服务器，其本质
上比其它网络资产的移动性稍低。在这种情况下，DNS管理员可以将DNS防火墙策
略锚定在滥用的名字服务器名字或名字服务器地址中，从而保护客户的最终用户
免受事先不知道该威胁的域名或IP地址的威胁。

电子犯罪分子就像数字社会的其余部份一样，完全依赖DNS的弹性。通过锁定DNS
级别的犯罪资产，我们可以阻止这些犯罪分子获得他们所需要的弹性。分布式
DNS防火墙可以利用安全公司的高技能来保护大量终端用户。DNS RPZ作为第一个
开放的、独立于厂商的分布式DNS防火墙，可以有效地向客户提供威胁情报。

DNS RPZ的价值的真实例子
^^^^^^^^^^^^^^^^^^^^^^^

Conficker恶意软件蠕虫(https://en.wikipedia.org/wiki/Conficker )于2008
年首次被发现。尽管它不再是活跃的威胁，但这里描述的技术可以应用于其它
DNS威胁。

Conficker使用域生成算法(DGA)每天选择多达50,000个命令和控制域。创建一个
包含这么多域名和每天更改这么多域名的RPZ是不切实际的。相反，我们可以基
于作为命令和控制域的权威的名字服务器的名字来触发RPZ规则，而不是尝试对
（每日）5万个不同查询名字中的每个名字来触发。由于Conficker的域名所使用
的众所周知的名字服务器名字从未被非恶意域名使用，因此污染所有依赖于这些
名字服务器的查找是安全的。下面是一个获得这个结果的例子：

::

  $ORIGIN rpz.example.com.
  ns.0xc0f1c3a5.com.rpz-nsdname  CNAME  *.walled-garden.example.com.
  ns.0xc0f1c3a5.net.rpz-nsdname  CNAME  *.walled-garden.example.com.
  ns.0xc0f1c3a5.org.rpz-nsdname  CNAME  *.walled-garden.example.com.

这些CNAME目标名开头的 ``*`` 是特殊的，它导致原始查询名字被添加到CNAME
目标前面。因此，如果用户试图访问Conficker命令和控制域
http://racaldftn.com.ai/ （这在2011年10月19日是有效的Conficker命令和控
制域名），配置了RPZ的递归名字服务器将返回以下答案：

::

  racaldftn.com.ai.     CNAME     racaldftn.com.ai.walled-garden.example.com.
  racaldftn.com.ai.walled-garden.example.com.     A      192.168.50.3

这个例子假设还创建了以下DNS内容，它不是RPZ区自身的一部分，而是在另一个
域中：

::

  $ORIGIN walled-garden.example.com.
  *     A     192.168.50.3

假设我们正在运行一个监听在192.168.50.3上的web服务器，无论使用什么统一
资源标识符（URI），它总是显示一个警告消息，那么上面的RPZ配置将指示任何
受感染的最终用户的web浏览器连接到一个“服务器名”，该“服务器名”由他们的
原始查找名（racaldftn.com.ai）附加在“围墙花园”域名
（walled-garden.example.com）之前而组成。这是将出现在web服务器日志文件
中的名字，在该日志文件中保留全名将有助于分析哪些用户感染了什么病毒。

.. _firewall_updates:

保持防火墙策略更新
~~~~~~~~~~~~~~~~~~

增量区传送（参见 :rfc:`1995` ）和实时变化通知（参见 :rfc:`1996` ）用于
在发布者的规则集主副本和订阅者的规则集工作副本之间同步DNS防火墙规则集，
这对于系统整体性能至关重要。

如果使用DNS动态更新来维护DNS RPZ规则集，名字服务器会自动计算一个增量流，
用于给订阅名字服务器发送量区传送。发送一个增量流 - 也即著名的“增量区传
送”或IXFR - 通常比每次变化时发送整个区更快，因此，值得努力使用一种编辑
方法，使这种增量传送成为可能。

编辑或定期重新生成DNS RPZ规则集以及使用BIND作主名字服务器的管理员可以
启用 :any:`ixfr-from-differences` 选项，该选项告诉主名字服务器计算每个
新区与前一个版本之间的差异，并将这些差异作为增量流提供，以用于向订阅名
字服务器进行增量区传送。如下所示：

.. code-block:: c

       options {
                 // ...
                 ixfr-from-differences yes;
                 // ...
       };

如上所述，DNS防火墙最简单、最常见的用途是污染已知的纯恶意域名，简单地
让其消失。所有DNS RPZ规则都表示为资源记录集（RRset），而表示“强制一个
名字不存在的条件”的方法是添加一个指向根域（ ``.`` ）的CNAME。在实践中，
这看起来像：

::

  $ORIGIN rpz.example.com.
  malicious1.org          CNAME .
  *.malicious1.org        CNAME .
  malicious2.org          CNAME .
  *.malicious2.org        CNAME .

本例中有两点值得注意。首先，恶意名字在响应策略区内是相对的。由于在上面
的例子中".org"后面没有结尾的点，因此在此响应策略区内创建的实际RRset在
展开后为：

::

  malicious1.org.rpz.example.com.         CNAME .
  *.malicious1.org.rpz.example.com.       CNAME .
  malicious2.org.rpz.example.com.         CNAME .
  *.malicious2.org.rpz.example.com.       CNAME .

其次，对每个被污染的名字，都列出一个通配符名字。这是因为恶意域名可能具
有或可能潜在地具有恶意子域名。

在上面的例子中，相对域名 `malicious1.org` 和 `malicious2.org` 将会分别
只匹配真实域名 `malicious1.org` 和 `malicious2.org` 。相对域名
`*.malicious1.org` 和 `*.malicious2.org` 将会分别匹配任何
`subdomain.of.malicious1.org` 或 `subdomain.of.malicious2.org` 。

这个例子强制使用一个NXDOMAIN作为其策略动作，但是也可以使用其它策略动作。

.. _multiple_rpz_performance:

使用多个RPZ时的性能和伸缩性
~~~~~~~~~~~~~~~~~~~~~~~~~~~

从9.10版本开始，BIND可以根据查询客户端的标识和查询的性质配置成具有不同
的响应策略。要配置BIND响应策略，将信息放在一个区文件中，其唯一目的是将
策略信息传递给BIND。包含响应策略信息的区文件称为响应策略区，或RPZ，
在BIND中使用这些区信息的机制称为DNS RPZ。

在单个BIND实例中，可以使用多至64个独立的RPZ文件，且BIND在这种重度使用
RPZ时不会有显著减慢。

（注意：BIND 9.11缺省只支持32个RPZ文件，但是可以在编译时增加到64个。所
有其它BIND版本缺省都支持64个。）

策略区文件中的每一个可以根据需要为尽可能多的不同域指定策略。64的限制是
独立指定的策略集合的数目，而不是指定策略的区数量。

所有策略区的策略信息存储在一个特定的数据结构中，允许跨所有策略区进行并
发查找，且能够非常快速地执行。查找策略规则与最大的单个策略区中规则数量
的对数成正比。

.. _rpz_practical_tips:

DNS防火墙和DNS RPZ的实用技巧
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

订阅外部发布DNS策略区并且具有大量内部递归名字服务器的管理员应当建立一
个内部名字服务器，叫做“分发主服务器”（DM）。从发布者的视角看，DM是一个
辅（隐藏辅）名字服务器；即，DM从外部服务器取得区内容。从内部递归名字服
务器的视角看，DM还是一个主名字服务器：它们从DM取得区内容。在这个配置中，
DM充当了外部发布者与内部订阅者之间的通道。

主服务器必须知道每个订阅递归服务器的单播监听地址，并且必须枚举所有这些
地址作为实时区变化通知的目的地（在 :rfc:`1996` 中描述）。因此，如果一
个企业范围的RPZ名为“rpz.example.com”，并且四个订阅递归名字服务器的单播
监听地址分别为192.0.200.1，192.0.201.1，192.0.202.1和192.0.203.1，则主
服务器的配置可能像这样：

.. code-block:: c

  zone "rpz.example.com" {
       type primary;
       file "primary/rpz.example.com";
       notify explicit;
       also-notify { 192.0.200.1;
                     192.0.201.1;
                     192.0.202.1;
                     192.0.203.1; };
       allow-transfer { 192.0.200.1;
                        192.0.201.1;
                        192.0.202.1;
                        192.0.203.1; };
       allow-query { localhost; };
  };

每个订阅策略区的递归DNS服务器都必须配置为该区的辅服务器，还必须配置为
将该策略区用于本地响应策略。要将递归名字服务器订阅到响应策略区，其中主
服务器的单播监听地址为192.0.220.2，服务器的配置应该像这样：

.. code-block:: c

  options {
       // ...
       response-policy {
            zone "rpz.example.com";
       };
       // ...
  };

  zone "rpz.example.com";
       type secondary;
       primaries { 192.0.222.2; };
       file "secondary/rpz.example.com";
       allow-query { localhost; };
       allow-transfer { none; };
  };

注意，查询被限制为“localhost”，因为查询访问从不被DNS RPZ自身所使用，但
在调试时可能对DNS操作者很有用。应禁止区传送，以免策略信息泄露。

如果一个组织的业务连续性依赖于与另一家公司的完全连接，而该公司的ISP也
为一些犯罪或滥用的客户服务，一个或多个外部RPZ提供者 - 也就是安全提要供
应商 - 最终可能会添加一些RPZ规则，这些规则可能会损害公司与其业务合作伙
伴的连接。用户可以通过在任何外部RPZ之外使用一个内部RPZ，并在他们的内部
RPZ中放入一些“传递”规则来防止任何策略动作影响涉及业务伙伴的DNS响应，从
而保护自己免受这种风险。

递归DNS服务器可以连接到多个RPZ，并按顺序搜索这些RPZ。因此，为了保护网
络不受外部RPZ区中某天可能出现的危险策略的影响，管理员应该首先列出内部
RPZ区。

.. code-block:: c

  options {
       // ...
       response-policy {
            zone "rpz.example.com";
            zone "rpz.security-vendor-1.com";
            zone "rpz.security-vendor-2.com";
       };
       // ...
  };

在内部RPZ中，需要有规则来描述与之通信需要保护的业务伙伴的网络资产。虽
然通常不可能知道他们使用的域名，管理员还是清楚他们的地址空间，并且也许
还有他们使用的名字服务器名。

::

  $ORIGIN rpz.example.com.
  8.0.0.0.10.rpz-ip                CNAME   rpz-passthru.
  16.0.0.45.128.rpz-nsip           CNAME   rpz-passthru.
  ns.partner1.com.rpz-nsdname      CNAME   rpz-passthru.
  ns.partner2.com.rpz-nsdname      CNAME   rpz-passthru.

这里，我们知道答案落入地址块10.0.0.0/8表明是业务伙伴，同样还有答案涉及
任何名字服务器的地址在128.45.0.0/16地址块，以及答案涉及名字服务器名为
ns.partner1.com或ns.partner2.com也都是业务伙伴。

上述例子展示了当用答案的IP地址（.rpz-ip的属主），或用名字服务器的IP地
址（.rpz-nsip的属主），或用名字服务器的域名（rpz-nsdname的属主）匹配时，
特定的RPZ标记（.rpz-ip，.rpz-nsip，或.rpz-nsdname）不会作为CNAME目标名
出现。

通过使用合作伙伴的已知网络资产触发这些规则，并使用“传递”策略动作，随后
的RPZ处理（即上面例子中提到的“rpz.security-vendor-1.com”和
“rpz.security-vendor-2.com”策略区）不会对合作伙伴资产的DNS响应产生任何
影响。

.. _walled_garden_ip_address:

建立一个由IP地址触发的简单的围墙花园
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

在这种情况下，对攻击者的唯一了解可能是他们用于“钓鱼”web服务器的IP地址
块。如果他们使用的域名和名字服务器是未知的，但已知他们的每一个“钓鱼”
web服务器都在一个小的IP地址块内，则可以对包含该地址范围内的记录的所有
回答触发响应，使用如下示例所示的RPZ规则：

::

  $ORIGIN rpz.example.com.
  22.0.212.94.109.rpz-ip          CNAME   drop.garden.example.com.
  *.212.94.109.in-addr.arpa       CNAME   .
  *.213.94.109.in-addr.arpa       CNAME   .
  *.214.94.109.in-addr.arpa       CNAME   .
  *.215.94.109.in-addr.arpa       CNAME   .

在这里，如果一个真正的答案包含一条A（地址）RR（资源记录），且其值在
109.94.212.0/22这个地址块中，就会发出一个合成的答案替代真正的答案。假
设查询是针对 www.malicious.net，合成的答案是：

::

  www.malicious.net.              CNAME   drop.garden.example.com.
  drop.garden.example.com.        A       192.168.7.89

这假设在RPZ之外，已经创建了 `drop.garden.example.com` 作为真正的DNS内
容：

::

  $ORIGIN example.com.
  drop.garden                     A       192.168.7.89

在这个例子中，CNAME目标名中没有“\*”，所以原始的查询名不会出现在围墙花
园内的web服务器的日志文件中。这是一个不希望的信息损失，展示在这里仅仅
是作为例子的目的。

上面的示例RPZ规则还会影响对不需要地址的地址到名字（也被称为“反向DNS”）
查找。如果一个邮件或web服务器收到来自例子中109.94.212.0/22地址块中的地
址的连接，它将执行PTR记录查找以找到与该IP地址相关的域名。

这种地址到名字的转换通常用于诊断或记录日志的目的，但电子邮件服务器也经
常拒绝来自没有从地址到名字转换的IP地址的任何电子邮件。大多数来自此类IP
地址的邮件都是垃圾邮件，因此这里缺少PTR记录具有一定的预测价值。通过对
与地址块关联的PTR名字空间中的所有查找使用“强制名字不存在”策略触发器，
DNS管理员可以向服务器提示这些IP地址可能正在发送垃圾邮件。

.. _known_rpz_inconsistency:

在DNS RPZ的NSDNAME和NSIP规则中的已知的不一致
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

响应策略区为每条规则定义了几个可能的触发器，其中两种产生的结果是不一致
的。这不是漏洞；相反，它与DNS授权模型的不一致有关。

DNS授权
^^^^^^^

在DNS权威数据中，不在DNS区顶端的NS资源记录集创建子区。该子区的数据与
当前（或“父”）区是分离的，它可以具有与当前区不同的权威名字服务器。通过
这种方式，根区指向COM、NET、ORG等，以此类推，它们都有自己的名字服务器
和管理权威数据的方式。同样，ORG授权到ISC.ORG和数百万其它“点ORG”区，每
个区都可以拥有自己的权威名字服务器集。按照协议的说法，这些位于区顶点以
下的NS资源记录集被称为“授权点”。在一个授权点上的NS资源记录集包含一个权
威服务器列表，父区正在将授权点及之下所有名字的权威授权给这些服务器。

在每个区的顶端也有一个NS资源记录集。理想情况下，这个所谓的“顶点NS资源
记录集”应该与父区中的“授权点NS资源记录集”相同，但这种理想情况并不总是
能实现。在真正的DNS中，区管理员更新这些NS资源记录集中的一个几乎总是比
更新另一个更容易，因此其中一个是正确的，另一个是过期的。这种不一致是如
此普遍，以至于它被认为是无害的：以这种方式不一致的域更不可靠，可能更慢，
但只要每个NS资源记录集和真相之间有一些重叠，它们仍然可以工作。（在本例
中，“真相”指的是该区的权威名字服务器的实际集合。）

DNS迭代的快速回顾
^^^^^^^^^^^^^^^^^

在DNS递归名字服务器中，如果一个进入的查询在本地缓存中无法回答，就发送
到查询名字最接近的已知授权点去。例如，如果一个服务器正在查找
XYZZY.ISC.ORG并且它知道ISC.ORG的名字服务器，它就直接将查询发给那些服务
器；然而，如果它之前从未听说过ISC.ORG，它就必须首先发送查询到ORG的名字
服务器（或者也许到作为ORG父区的根区）。

当它询问其中的一个父名字服务器时，该服务器没有答案，因此它发送一个只包
含“授权点NS资源记录集”的“指引”。一旦服务器接收到这个指引，它就“迭代地”
再次发送相同的查询，但这次发给负责查询名字中更特定部分的名字服务器。
最终，这个迭代终止，通常是从查询名字的权威服务器获得一个答案或一个“名
字错误”（NXDOMAIN），或者遇到某种类型的服务器故障。

当查询名的权威服务器发送应答时，它可以选择包含区顶点NS资源记录集的一个
副本。如果发生这种情况，递归名字服务器缓存这个NS资源记录集，替换它在迭
代过程中收到的授权点NS资源记录集。用DNS的说法来说，授权点NS资源记录集
是“附着物”，意味着非权威数据，或者更多的是暗示而不是真实的事实。另一方
面，顶点NS资源记录集是来自区本身的权威数据，它被认为比“附着物”更可信。
出于这个原因，顶点NS资源记录集的正确要比授权点NS资源记录集的正确更重要，
因为前者会很快取代后者，并且会在更长的总时间段内更经常地使用。

重要的是，权威名字服务器不需要在任何答案中包含其顶点NS资源记录集，递归
名字服务器通常不直接查询这个资源记录集。因此，顶点NS资源记录集完全错误
而没有任何运行上的不良影响是可能的，因为错误的数据不需要暴露。当然，如
果一个进入的查询是针对这个NS资源记录集，大多数递归名字服务器将把该查询
转发到区的权威服务器，因为在被询问特定问题时返回“附着物”数据是一种不好
的形式。在这些极端情况下，糟糕的顶点NS资源记录集数据会导致一个区不可预
知地无法访问，这取决于递归名字服务器处理的其它查询。

还有另一种“附着物”，用于名字位于授权点以下的名字服务器。如果ORG将
ISC.ORG授权到NS-EXT.ISC.ORG，服务器需要知道NS-EXT.ISC.ORG的地址并返回
这个地址作为授权响应的一部分。但是，此名字服务器的名字到地址的绑定仅在
ISC.ORG区内部具有权威；因此，随授权发出的A或AAAA资源记录集是非权威的
“附着物”，如果看到权威的资源记录集，就会被替换为后者。与顶点NS资源记录
集一样，递归名字服务器不会自动查询真正的A或AAAA资源记录集，而是当进入
的查询是请求这个资源记录集时才进行查询。

进入RPZ
^^^^^^^

RPZ有两种触发器类型，NSDNAME和NSIP，用于允许策略区作者将所有由相同DNS
服务器提供服务的域的整体为目标。NSDNAME和NSIP规则分别与应答所在的区及
其所有上级区的名字服务器的名字和IP地址进行匹配。在其的缺省配置中，BIND
主动地获取任何缺失的NS资源记录集和地址记录。如果在试图解析所有这些授权
的服务器名字的过程中，BIND接收到任何查询的SERVFAIL响应，那么它将中止策
略规则计算并为查询返回SERVFAIL。从技术上讲，这既不是规则的匹配也不是规
则的不匹配。

在一个完整域名（FQDN）中，每个“.”代表一个潜在的授权点。当BIND搜索父区
NS资源记录集（在NSIP的情况下，以及它们的附带地址记录）时，它必须检查每
一个可能的委托点。对于一些专门的伪域来说，这可能会成为一个问题，例如一
些域名和网络信誉系统，它们的名字中有许多“.”字符。如果该系统还有不兼容
的DNS服务器，这些服务器静默地丢弃对NS和SOA记录的查询，则情况会更加复杂。
这迫使BIND在完成对策略规则的计算之前等待这些查询超时，即使这比不少客户
机通常等待一个答案的时间要长（已经观察到超过60秒的延迟）。

虽然这两种情况确实涉及到技术上“损坏”的配置和/或服务器，但由于冗余和迭
代优化，它们可能仍然在RPZ NSIP和NSDNAME规则之外“工作”。

有两个RPZ选项， ``nsip-wait-recurse`` 和 ``nsdname-wait-recurse`` ，它
们分别允许BIND在计算NSIP和NSDNAME规则时只使用缓存中已经存在的记录，从
而改变了BIND的行为。

因此NSDNAME和NSIP规则是不可靠的。规则可以与顶点NS资源记录集或“附着物”
NS资源记录集相匹配，每个都有与其关联的地址（也可能是“附着物”，也可能不
是）。管理员的利益是发现授权名字服务器的名字和地址，以及顶点名字服务器
的名字和权威地址记录，以确保在RPZ中正确地使用NS和NSIP触发器。即使这样，
也可能对完全不相关的域造成附带损害，而这些域本来只是通过NSIP和NSDNAME
规则“工作”的。

.. _rpz_disable_mozilla_doh:

例子：使用RPZ关闭Mozilla DoH-by-Default
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

2019年9月，Mozilla宣布他们将为所有美国的Firefox浏览器用户开启
DNS-over-HTTPS（DoH），将他们所有的DNS查询发送到预定义的DoH提供者（特
别是Cloudflare的1.1.1.1服务）。这是一些网络管理员所关心的问题，他们不
希望用户的DNS查询意外地被重路由。然而，Mozilla提供了一种机制来禁用
DoH-by-default设置：如果Mozilla所拥有的域 `use-application-dns.net
<https://use-application-dns.net>`_ 返回一个NXDOMAIN响应码，Firefox将
不会使用DoH。

使用RPZ来达到这个目的：

1. 建立一个名为 ``mozilla.rpz.db`` 的策略区文件，配置成对任何针对
   ``use-application-dns.net`` 的查询返回NXDOMAIN：

::

  $TTL	604800
  $ORIGIN	mozilla.rpz.
  @	IN	SOA	localhost. root.localhost. 1 604800 86400 2419200 604800
  @	IN	NS	localhost.
  use-application-dns.net CNAME .

2. 添加区到BIND配置（通常是 :iscman:`named.conf` ）：

.. code-block:: c

  zone mozilla.rpz {
      type primary;
      file "/<PATH_TO>/mozilla.rpz.db";
      allow-query { localhost; };
  };

3. 增加 :any:`response-policy` 到 ``options {}`` 部份，开启对所有进入的查
   询使用响应策略区：

.. code-block:: c

  options {
  	response-policy { zone mozilla.rpz; } break-dnssec yes;
  };

4. 重新装载配置并测试刚增加的响应策略区是否生效：

.. code-block:: shell-session

  # rndc reload
  # dig IN A use-application-dns.net @<IP_ADDRESS_OF_YOUR_RESOLVER>
  # dig IN AAAA use-application-dns.net @<IP_ADDRESS_OF_YOUR_RESOLVER>

响应应当返回NXDOMAIN，而不是IP地址列表，而BIND 9的日志应当包含类似这样
的行：

.. code-block:: none

  09-Sep-2019 18:50:49.439 client @0x7faf8e004a00 ::1#54175 (use-application-dns.net): rpz QNAME NXDOMAIN rewrite use-application-dns.net/AAAA/IN via use-application-dns.net.mozilla.rpz
  09-Sep-2019 18:50:49.439 client @0x7faf8e007800 127.0.0.1#62915 (use-application-dns.net): rpz QNAME NXDOMAIN rewrite use-application-dns.net/AAAA/IN via use-application-dns.net.mozilla.rpz

注意这是最简单的可能配置；特定配置可能不同，特别是对于已经使用其它响应
策略区，或者其服务器配置了多个视图的管理员。
